*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Alineación Horizontal Básica
Objetivo: Crear una barra de navegación simple donde los elementos estén alineados horizontalmente.

Crea un archivo HTML con una estructura básica.
Dentro del <body>, crea un contenedor <div class="nav-bar">.
Dentro de .nav-bar, agrega tres enlaces <a> con texto "Inicio", "Sobre Nosotros" y "Contacto".
Aplica estilos con CSS para que los elementos dentro de .nav-bar estén alineados horizontalmente usando Flexbox. */

a{
  text-decoration: none; /* Eliminar subrayado */
  color: black;
  transition: all 0.3s ease-in-out;
}

a:hover{
  color: blue;
  border-bottom: 1px solid;
  cursor: pointer;
  transform: translateY(-5px);
}


.nav-bar{
  display: flex;
  justify-content: end;
  gap: 1rem;
  padding: 1rem;
  background-color: aquamarine;
}

/* Ejercicio 2: Alineación Vertical
Objetivo: Crear un contenedor donde los elementos hijos estén centrados verticalmente. */

.container{
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100vh; /* Para ocupar toda la altura de la ventana */
  flex-wrap: wrap;
}

.content {
  display: flex;
  flex: 1;
  flex-wrap: wrap;
}

.vertical-center{
  display: flex;
  background-color: blueviolet;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex: 1; /* Flexibilidad para ocupar el espacio necesario */
  padding: 1.5rem;
  gap: 1rem;
  min-width: 200px;
}

.vertical-center div {
  background-color: white;
  padding: 1rem;
  border-radius: 0.5rem;
  width: 100%;
  text-align: center;
}

.side-box {
  background-color: lightcoral;
  padding: 1.5rem;
  flex: 1; /* Flexibilidad para ocupar el espacio sobrante */
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 200px;
}

/* La propiedad flex es una abreviatura para las propiedades flexibles de un elemento hijo en un contenedor Flexbox. La propiedad flex permite especificar cómo los elementos hijos deben crecer o encogerse en relación con los demás elementos dentro de un contenedor.

La propiedad flex puede aceptar uno, dos o tres valores, que se corresponden con flex-grow, flex-shrink, y flex-basis respectivamente. Aquí te explico cada uno de estos valores:

Valores de la Propiedad flex
flex-grow:

Define la capacidad de un elemento para crecer si es necesario.
Un valor de 1 permite al elemento crecer y ocupar el espacio disponible.
Un valor de 0 significa que el elemento no crecerá más allá de su tamaño base.
flex-shrink:

Define la capacidad de un elemento para encogerse si es necesario.
Un valor de 1 permite al elemento encogerse si el contenedor es más pequeño que la suma de las anchuras de todos los elementos flexibles.
Un valor de 0 significa que el elemento no se encogerá.
flex-basis:

Define el tamaño inicial del elemento antes de distribuir el espacio sobrante.
Puede ser un valor absoluto (px, em, rem, etc.) o auto.
auto significa que el tamaño es el contenido del elemento más cualquier ancho definido explícitamente.
Sintaxis
La propiedad flex puede ser especificada de varias formas:

flex: 1; (Equivalente a flex: 1 1 0%;)
flex: 2 1 200px; (Crecimiento 2, encogimiento 1, tamaño base 200px)
flex: none; (Equivalente a flex: 0 0 auto;) */

/* La propiedad flex es una herramienta poderosa para controlar la distribución del espacio dentro de un contenedor Flexbox. Entender cómo usar flex-grow, flex-shrink y flex-basis te permitirá crear diseños más flexibles y adaptativos.*/

footer{
  display: flex;
  justify-content: center;
  padding: 1rem;
  background-color: red;
}

p{
  background-color: white;
  padding: 1rem;
  border-radius: 1rem
}
